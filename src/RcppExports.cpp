// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hjorth_params_seq_cpp
void hjorth_params_seq_cpp(std::vector<std::string>& seq_set, NumericVector& activity, NumericVector& mobility, NumericVector& complexity, int offset);
RcppExport SEXP sigbin_hjorth_params_seq_cpp(SEXP seq_setSEXP, SEXP activitySEXP, SEXP mobilitySEXP, SEXP complexitySEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string>& >::type seq_set(seq_setSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type activity(activitySEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mobility(mobilitySEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type complexity(complexitySEXP);
    Rcpp::traits::input_parameter< int >::type offset(offsetSEXP);
    hjorth_params_seq_cpp(seq_set, activity, mobility, complexity, offset);
    return R_NilValue;
END_RCPP
}
// hjorth_params_single_sig_cpp
void hjorth_params_single_sig_cpp(NumericVector& signal, NumericVector& result);
RcppExport SEXP sigbin_hjorth_params_single_sig_cpp(SEXP signalSEXP, SEXP resultSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type signal(signalSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type result(resultSEXP);
    hjorth_params_single_sig_cpp(signal, result);
    return R_NilValue;
END_RCPP
}
// hjorth_params_sig_cpp
void hjorth_params_sig_cpp(List& sig_list, NumericVector& activity, NumericVector& mobility, NumericVector& complexity);
RcppExport SEXP sigbin_hjorth_params_sig_cpp(SEXP sig_listSEXP, SEXP activitySEXP, SEXP mobilitySEXP, SEXP complexitySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type sig_list(sig_listSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type activity(activitySEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mobility(mobilitySEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type complexity(complexitySEXP);
    hjorth_params_sig_cpp(sig_list, activity, mobility, complexity);
    return R_NilValue;
END_RCPP
}
// sequence_to_signal_cpp
NumericVector sequence_to_signal_cpp(std::string& seq);
RcppExport SEXP sigbin_sequence_to_signal_cpp(SEXP seqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type seq(seqSEXP);
    rcpp_result_gen = Rcpp::wrap(sequence_to_signal_cpp(seq));
    return rcpp_result_gen;
END_RCPP
}
